datasource db {
  provider  = "postgresql"
  url       = env("SUPABASE_URL")
  directUrl = env("SUPABASE_DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Model for storing user data
model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  secret    String    @unique
  projects  Project[]
}

// Model for storing projects
model Project {
  id          String         @id @unique @default(uuid())
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  name        String
  description String?
  tags        String[]
  user        User           @relation(fields: [userSecret], references: [secret], onDelete: Cascade, onUpdate: Cascade)
  userSecret  String
  tables      TableModel[]
  networks    NetworkModel[]
}

// Model for storing table data
model TableModel {
  id          String   @id @unique @default(uuid())
  name        String
  description String?
  headers     String[]
  values      Int[]
  project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId   String
  models      Model[]
}

// Model for storing network models
model NetworkModel {
  id          String              @id @unique @default(uuid())
  name        String
  description String?
  layers      NetworkModelLayer[]
  project     Project             @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId   String
}

// Model for storing network model layers
model NetworkModelLayer {
  id        String        @id @unique @default(uuid())
  type      String
  neurons   Int
  shape     Int
  network   NetworkModel? @relation(fields: [networkId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  networkId String?
}

// Model for storing project models
model Model {
  id          String      @id @unique @default(uuid())
  networkName String
  createdAt   DateTime    @default(now())
  model       String
  table       TableModel? @relation(fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tableId     String?
}

// npx prisma migrate dev --name init
