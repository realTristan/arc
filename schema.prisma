datasource db {
  provider  = "postgresql"
  url       = env("SUPABASE_URL")
  directUrl = env("SUPABASE_DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Model for storing projects
model Project {
  id          String         @id @default(uuid())
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  name        String
  description String?
  tags        String[]
  user        User           @relation(fields: [userSecret], references: [secret])
  userSecret  String
  tables      TableModel[]
  networks    NetworkModel[]
  builds      Build[]
}

// Model for storing user data
model User {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  secret    String    @unique
  projects  Project[]
}

// Model for storing previous builds
model Build {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String
}

// Model for storing table data
model TableModel {
  id          String   @id @default(uuid())
  name        String
  description String?
  headers     String[]
  values      Int[]
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String
}

// Model for storing network models
model NetworkModel {
  id          String              @id @default(uuid())
  name        String
  description String?
  layers      NetworkModelLayer[]
  project     Project             @relation(fields: [projectId], references: [id])
  projectId   String
}

// Model for storing network model layers
model NetworkModelLayer {
  id             String        @id @unique
  type           String
  neurons        Int
  shape          Int
  network        NetworkModel? @relation(fields: [networkModelId], references: [id])
  networkModelId String?
}

// npx prisma migrate dev --name init
